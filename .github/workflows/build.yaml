name: Build

on:
  push:
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight UTC
  workflow_dispatch:
  
jobs:

  build:
    runs-on: windows-latest
    strategy:
      matrix:
        channel: [canary, wif, wis, rp, retail]

    continue-on-error: true
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install requests beautifulsoup4

    - name: Get latest UUP set
      id: dwnld
      run: |
        python get.py ${{ matrix.channel }}
      
    - name: Build ISO
      id: build
      run: |
        work\uup_download_windows.cmd || true
        
        $channel = "${{ matrix.channel }}"
        switch ($channel) {
            "canary" { echo "channel=Canary" >> $env:GITHUB_OUTPUT }
            "wif" { echo "channel=Dev" >> $env:GITHUB_OUTPUT }
            "wis" { echo "channel=Beta" >> $env:GITHUB_OUTPUT }
            "rp" { echo "channel=ReleasePreview" >> $env:GITHUB_OUTPUT }
            "retail" { echo "channel=Stable" >> $env:GITHUB_OUTPUT }
            default { Write-Error "Unsupported channel"; exit 1 }
        }
        
    - name: Rename ISO
      run: Move-Item -Path work\*.ISO -Destination "work\${{ steps.build.outputs.channel }}-${{ steps.dwnld.outputs.build }}-arm64.iso" -Force -ErrorAction SilentlyContinue        
    
    - name: Upload ISO
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.build.outputs.channel }}-${{ steps.dwnld.outputs.build }}-arm64
        path: |
            work/*.iso
        
    ## Write for matrix outputs workaround 
    - name: Write out
      uses: cloudposse/github-action-matrix-outputs-write@v1
      id: out
      with:
        matrix-step-name: build
        matrix-key: ${{ matrix.platform }}
        outputs: |-
          buildNum: ${{ steps.dwnld.outputs.build }}
          buildId: ${{ steps.dwnld.outputs.buildId }}
       
  release:
    runs-on: ubuntu-latest
    needs: [ init, build ]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
        
    - name: Read outputs
      uses: cloudposse/github-action-matrix-outputs-read@v1
      id: read
      with:
        matrix-step-name: build
        
    - name: Update currently built list
      run: |
        if [ -n "${{ steps.read.outputs.buildId.canary }}" ]; then
          python updateBuilt.py canary ${{ steps.read.outputs.buildId.canary }}
        fi
        if [ -n "${{ steps.read.outputs.buildNum.wif }}" ]; then
          python updateBuilt.py wif ${{ steps.read.outputs.buildId.wif }}
        fi
        if [ -n "${{ steps.read.outputs.buildNum.wis }}" ]; then
          python updateBuilt.py wis ${{ steps.read.outputs.buildId.wis }}
        fi
        if [ -n "${{ steps.read.outputs.buildNum.rp }}" ]; then
          python updateBuilt.py rp ${{ steps.read.outputs.buildId.rp }}
        fi
        if [ -n "${{ steps.read.outputs.buildNum.retail }}" ]; then
          python updateBuilt.py retail ${{ steps.read.outputs.buildId.retail }}
        fi
        
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "release-info[bot]"
        git commit -a -m "Update list" || true
        
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        branch: ${{ github.head_ref }}
        force: true